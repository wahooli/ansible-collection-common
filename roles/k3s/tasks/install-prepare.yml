---
- name: Ensure debian packages are installed
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: "{{ ansible_loop.first }}"
    state: present
  with_items: "{{ prepare_debian_install_pkg }}"
  loop_control:
    extended: true
  when: ansible_facts['os_family'] == "Debian"

- name: Check if overlay module is active
  ansible.builtin.command: modinfo overlay
  register: modinfo_overlay
  changed_when: modinfo_overlay.rc != 0

- name: Add overlay module
  community.general.modprobe:
    name: overlay
    state: present
    persistent: present
  when: modinfo_overlay.rc > 0

- name: Check if br_netfilter module is active
  ansible.builtin.command: modinfo br_netfilter
  register: modinfo_br_netfilter
  changed_when: modinfo_br_netfilter.rc != 0

- name: Add br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present
    persistent: present
  when: modinfo_br_netfilter.rc > 0

- name: Disable swap for current session
  ansible.builtin.command: swapoff -a
  register: swapoff_output
  changed_when: swapoff_output.rc != 0

- name: Disable swap permanently, persist reboots
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: true

- name: Set sysctls
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_file: "{{ sysctl_file }}"
    state: present
    reload: "{{ ansible_loop.last }}"
  with_items: "{{ prepare_sysctls }}"
  loop_control:
    extended: true
