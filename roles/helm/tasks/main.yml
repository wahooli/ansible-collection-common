---
# tasks file for helm

- name: Check helm is found in install path
  ansible.builtin.stat:
    path: "{{ helm_install_path }}/helm"
  register: helm_binary

- name: Get installed helm version
  ansible.builtin.command: "{{ helm_install_path }}/helm version --template='{{ '{{' }} .Version {{ '}}' }}'"
  failed_when: false
  changed_when: helm_version.rc != 0
  register: helm_version

- name: Detect CPU arch
  when: not helm_arch | default(false)
  ansible.builtin.set_fact:
    helm_arch: |-
      {%- if (ansible_facts.architecture is search("arm") and ansible_facts.userspace_bits == "64") or ansible_facts.architecture is search("aarch64") -%}
        arm64
      {%- elif ansible_facts.architecture is search("arm") and ansible_facts.userspace_bits == "32" -%}
        arm
      {%- elif ansible_facts.architecture == "x86_64" -%}
        amd64
      {%- elif ansible_facts.architecture == "i386" -%}
        386
      {%- else -%}
        {{ ansible_facts.architecture }}
      {%- endif -%}

- name: Get latest helm tag
  when: not helm_tag | default(false) or helm_tag | lower == "latest"
  block:
  - name: Get list of helm github releases
    ansible.builtin.uri:
      url: https://api.github.com/repos/helm/helm/releases/latest
      return_content: true
      status_code: 200
    register: helm_releases
  - name: Set helm_tag fact
    ansible.builtin.set_fact:
      helm_tag: "{{ helm_releases.json.tag_name | trim | lower }}"
    when: not helm_releases.failed
# end block Get latest helm tag

- name: "Install helm {{ helm_tag }}"
  when: |
    not helm_binary.stat.exists
    or (helm_tag | lower) != (helm_version.stdout | lower)
  block:
  - name: Set helm dist
    ansible.builtin.set_fact:
      helm_dist: "helm-{{ helm_tag | lower }}-{{ helm_os | lower }}-{{ helm_arch | lower }}.tar.gz"

  - name: Create temporary download directory
    ansible.builtin.tempfile:
      state: directory
    register: helm_temp

  - name: Download helm
    ansible.builtin.get_url:
      url: https://get.helm.sh/{{ helm_dist }}
      checksum: sha256:https://get.helm.sh/{{ helm_dist }}.sha256
      dest: "{{ helm_temp.path }}"
      mode: "0644"
    register: helm_dl

  - name: Extract helm archive
    ansible.builtin.unarchive:
      src: "{{ helm_temp.path }}/{{ helm_dist }}"
      dest: "{{ helm_temp.path }}"
      remote_src: true
    when: helm_dl is success

  - name: Copy helm binary to install path
    become: true
    ansible.builtin.copy:
      src: "{{ helm_temp.path }}/{{ helm_os | lower }}-{{ helm_arch | lower }}/helm"
      dest: "{{ helm_install_path }}"
      mode: "0755"
      remote_src: true
    when: helm_dl is success

  - name: Delete helm temp path
    ansible.builtin.file:
      state: absent
      path: "{{ helm_temp.path }}"

# end block Install helm

- name: Install helm-diff plugin in python venv
  when: helm_diff_install | default(true)
  vars:
    virtualenv_command: "{{ 'python -m venv' if ansible_facts['os_family'] == 'Archlinux' else 'virtualenv' }}"
  block:
  - name: "Install debian packages"
    become: true
    ansible.builtin.apt:
      pkg:
      - git
      - curl
      - python3-pip
      - virtualenv
      update_cache: true
      cache_valid_time: 3600
    when: ansible_facts['os_family'] == "Debian"

  - name: Install git on Archlinux
    become: true
    community.general.pacman:
      name: git
      state: present
      update_cache: true
    when:
    - ansible_facts['os_family'] == "Archlinux"

  - name: Get user home path
    ansible.builtin.shell:
      executable: /bin/bash
      cmd: |-
        set -o pipefail
        grep -E {{ ansible_user | default('root') }}: /etc/passwd | awk -F: '{ print $6 }'
    failed_when: user_home_path.rc != 0
    changed_when: false
    register: user_home_path

  - name: Ensure the virtual environment exists
    ansible.builtin.pip:
      name: packaging
      virtualenv: "{{ user_home_path.stdout }}/.ansible-venv"
      virtualenv_command: "{{ virtualenv_command }}"

  - name: Run commands in venv
    vars:
      ansible_python_interpreter: "{{ venv_python }}"
      venv_dir: "{{ user_home_path.stdout }}/.ansible-venv"
      venv_python: "{{ venv_dir }}/bin/python"
    block:
    - name: Install helm-diff plugin
      ansible.builtin.import_tasks: install-helm-diff-plugin.yml

  # end block Run commands in venv
# end block Install helm-diff plugin in python venv
