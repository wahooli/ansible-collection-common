---
- name: Set bootstrap related facts # noqa: var-naming[no-role-prefix]
  ansible.builtin.set_fact:
    keys_directory: "{{ fluxcd_bootstrap_ssh_key_path }}/{{ fluxcd_bootstrap_key_name }}"
    private_key_path: "{{ fluxcd_bootstrap_ssh_key_path }}/{{ fluxcd_bootstrap_key_name }}/id_{{ fluxcd_bootstrap_ssh_key_type }}"
    public_key_path: "{{ fluxcd_bootstrap_ssh_key_path }}/{{ fluxcd_bootstrap_key_name }}/id_{{ fluxcd_bootstrap_ssh_key_type }}.pub"
    bootstrap_param_components: "{{ '--components ' + fluxcd_bootstrap_components | join(',') if fluxcd_bootstrap_components | default(None) is not none else '' }}"
    bootstrap_param_components_extra: "{{ '--components-extra=' + fluxcd_bootstrap_components_extra | join(',') if fluxcd_bootstrap_components_extra | length > 0 and (fluxcd_bootstrap_components_extra | default(None) is not none) else '' }}"
    bootstrap_param_cluster_domain: "{{ '--cluster-domain=' + fluxcd_bootstrap_cluster_domain if fluxcd_bootstrap_cluster_domain | default(None) is not none else '' }}"
    bootstrap_param_network_policy: "{{ '--network-policy=' + fluxcd_bootstrap_network_policy | string | lower if fluxcd_bootstrap_network_policy | default(None) is not none else '' }}"
    bootstrap_param_git_url: "{{ '--url=' + git_url if git_url != '' and git_url | default(None) is not none else '' }}"
    bootstrap_param_git_branch: "{{ '--branch=' + fluxcd_bootstrap_git_branch if fluxcd_bootstrap_git_branch | default(None) is not none else '' }}"
    bootstrap_param_git_path: "{{ '--path=' + fluxcd_bootstrap_git_path if fluxcd_bootstrap_git_path | default(None) is not none else '' }}"
    bootstrap_param_key_passphrase: "{{ '--password=' + fluxcd_bootstrap_ssh_key_passphrase if fluxcd_bootstrap_ssh_key_passphrase | default(None) is not none else '' }}"
    bootstrap_param_namespace: "{{ '--namespace=' + fluxcd_bootstrap_namespace if fluxcd_bootstrap_namespace | default(None) is not none else '' }}"
    bootstrap_param_version: "{{ '--version=' + fluxcd_bootstrap_version if fluxcd_bootstrap_version | default(None) is not none else '' }}"
    bootstrap_param_force: "{{ '--force' if fluxcd_bootstrap_force | default(false) else '' }}"
  vars:
    bootstrap_git_url: "{{ fluxcd_bootstrap_git_url | default('') }}"
    git_url: "{{ 'ssh://' + bootstrap_git_url | regex_replace(':', '/') if bootstrap_git_url is regex('^.*@.*') else bootstrap_git_url }}"

- name: Create directory for ssh keys
  ansible.builtin.file:
    path: "{{ keys_directory }}"
    state: directory
    mode: '0700'

- name: Chceck if private key exists # noqa: var-naming[no-role-prefix]
  ansible.builtin.stat:
    path: "{{ private_key_path }}"
  register: flux_bootstrap_pk

- name: Install required software
  when:
  - not flux_bootstrap_pk.stat.exists or fluxcd_bootstrap_key_rotate
  block:
  - name: Gather the package facts
    ansible.builtin.package_facts:
      manager: auto
    when: ansible_facts.packages is not defined
  - name: Install dependencies
    ansible.builtin.include_tasks: "bootstrap-{{ ansible_os_family | lower }}.yml"
# end block Install required software

- name: Set ssh keys same across hosts having same key name
  run_once: true
  tags:
  - molecule-idempotence-notest
  block:
  - name: Use passed values as keys # noqa: var-naming[no-role-prefix]
    # run_once: true
    when:
    - fluxcd_bootstrap_ssh_key_private_content | default("") != ""
    - fluxcd_bootstrap_ssh_key_public_content | default("") != ""
    ansible.builtin.set_fact:
      bootstrap_private_key_content: "{{ fluxcd_bootstrap_ssh_key_private_content }}"
      bootstrap_public_key_content: "{{ fluxcd_bootstrap_ssh_key_public_content }}"

  - name: Create ssh keys for bootstrapping
    when:
    - not flux_bootstrap_pk.stat.exists or fluxcd_bootstrap_key_rotate
    - bootstrap_private_key_content is undefined
    - bootstrap_public_key_content is undefined
    block:
    - name: Create .tmp in user home
      ansible.builtin.file:
        path: "~/.tmp/"
        state: directory
        mode: '0700'
    - name: Create temporary directory for keys # noqa: var-naming[no-role-prefix]
      ansible.builtin.tempfile:
        path: "~/.tmp/" # chattr fails on tmpfs, eg. /tmp
        state: directory
      register: flux_bootstrap_ssh_key_temp
    - name: Generate an OpenSSH keypair for bootstrap
      community.crypto.openssh_keypair:
        path: "{{ flux_bootstrap_ssh_key_temp.path }}/{{ fluxcd_bootstrap_key_name }}"
        size: "{{ fluxcd_bootstrap_ssh_key_size }}"
        passphrase: "{{ fluxcd_bootstrap_ssh_key_passphrase | default('') }}"
        type: "{{ fluxcd_bootstrap_ssh_key_type }}"
    - name: Read generated keys # noqa: var-naming[no-role-prefix]
      ansible.builtin.slurp:
        src: "{{ flux_bootstrap_ssh_key_temp.path }}/{{ ssh_key_name }}"
      register: generated_keys
      loop:
      - "{{ fluxcd_bootstrap_key_name }}"
      - "{{ fluxcd_bootstrap_key_name }}.pub"
      loop_control:
        loop_var: ssh_key_name
    - name: Read keys into envs # noqa: var-naming[no-role-prefix]
      ansible.builtin.set_fact:
        bootstrap_private_key_content: "{{ generated_keys.results | selectattr('ssh_key_name', 'equalto', fluxcd_bootstrap_key_name) | map(attribute='content') | first | ansible.builtin.b64decode | trim }}"
        bootstrap_public_key_content: "{{ generated_keys.results | selectattr('ssh_key_name', 'equalto', fluxcd_bootstrap_key_name + '.pub') | map(attribute='content') | first | ansible.builtin.b64decode | trim }}"
    always:
    - name: Delete keys temp path
      ansible.builtin.file:
        state: absent
        path: "{{ flux_bootstrap_ssh_key_temp.path }}"
# end block Set ssh keys same across hosts having same key name

- name: "Write public key" # noqa: var-naming[no-role-prefix]
  when:
  - bootstrap_public_key_content is defined
  ansible.builtin.copy:
    content: "{{ bootstrap_public_key_content }}"
    dest: "{{ public_key_path }}"
    mode: '0644'
  register: bootstrap_public_key_write

- name: "Write private key" # noqa: var-naming[no-role-prefix]
  when:
  - bootstrap_private_key_content is defined
  ansible.builtin.copy:
    content: "{{ bootstrap_private_key_content }}"
    dest: "{{ private_key_path }}"
    mode: '0600'
  register: bootstrap_private_key_write

- name: Get current user name # noqa: var-naming[no-role-prefix]
  ansible.builtin.command: whoami
  register: current_user_name
  changed_when: current_user_name.rc != 0
  when: ansible_user is undefined or ansible_user == ""

- name: Run kubernetes commands in venv
  when: bootstrap_public_key_write.changed or bootstrap_private_key_write.changed or fluxcd_bootstrap_key_rotate
  vars:
    venv_user: "{{ ansible_user | default(current_user_name.stdout) | default(omit) }}"
    virtualenv_command: "{{ 'python -m venv' if ansible_facts['os_family'] == 'Archlinux' else 'virtualenv' }}"
  block:
  - name: Get user home path # noqa: var-naming[no-role-prefix]
    ansible.builtin.shell:
      executable: /bin/bash
      cmd: |-
        set -o pipefail
        grep -E {{ venv_user | default('root') }}: /etc/passwd | awk -F: '{ print $6 }'
    failed_when: user_home_path.rc != 0
    changed_when: false
    register: user_home_path

  - name: Ensure the virtual environment exists
    ansible.builtin.pip:
      name: packaging
      virtualenv: "{{ user_home_path.stdout }}/.ansible-venv"
      virtualenv_command: "{{ virtualenv_command }}"

  - name: Run commands in venv
    vars:
      ansible_python_interpreter: "{{ venv_python }}"
      venv_dir: "{{ user_home_path.stdout }}/.ansible-venv"
      venv_python: "{{ venv_dir }}/bin/python"
    block:
    - name: Install python pre-requisites
      ansible.builtin.pip:
        name: kubernetes
    - name: Remove existing SSH keys from cluster
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Secret
        namespace: flux-system
        name: flux-system
  # end block Run commands in venv
# end block Run kubernetes commands in venv

- name: Add deploy key to GitHub
  when:
  - fluxcd_bootstrap_github_deploy_key_create
  block:
  - name: Enter GitHub OTP code # noqa: var-naming[no-role-prefix]
    when:
    - fluxcd_bootstrap_github_deploy_key_otp_login
    ansible.builtin.pause:
      prompt: "Enter GitHub OTP code:"
      echo: true
    register: otp_prompt
    run_once: true
  - name: Add deploy key to GitHub repo with OTP code
    when:
    - bootstrap_public_key_write.changed
    - fluxcd_bootstrap_github_deploy_key_otp_login
    community.general.github_deploy_key:
      owner: "{{ fluxcd_bootstrap_github_deploy_key_owner | default(fluxcd_bootstrap_github_deploy_key_username) }}"
      repo: "{{ fluxcd_bootstrap_github_deploy_key_repo_name }}"
      name: "{{ fluxcd_bootstrap_key_name }}"
      key: "{{ bootstrap_public_key_content }}"
      read_only: "{{ fluxcd_bootstrap_github_deploy_key_read_only }}"
      force: "{{ fluxcd_bootstrap_key_rotate }}"
      username: "{{ fluxcd_bootstrap_github_deploy_key_username }}"
      password: "{{ fluxcd_bootstrap_github_deploy_key_password }}"
      otp: "{{ otp_prompt.user_input | int if not otp_prompt.skipped | default(false) }}"

  - name: Add deploy key to GitHub repo with PAT
    when:
    - bootstrap_public_key_write.changed
    - not fluxcd_bootstrap_github_deploy_key_otp_login
    community.general.github_deploy_key:
      owner: "{{ fluxcd_bootstrap_github_deploy_key_owner | default(fluxcd_bootstrap_github_deploy_key_username) }}"
      repo: "{{ fluxcd_bootstrap_github_deploy_key_repo_name }}"
      name: "{{ fluxcd_bootstrap_key_name }}"
      key: "{{ bootstrap_public_key_content }}"
      read_only: "{{ fluxcd_bootstrap_github_deploy_key_read_only }}"
      force: "{{ fluxcd_bootstrap_key_rotate }}"
      token: "{{ fluxcd_bootstrap_github_deploy_key_password }}"
# end block Add deploy key to GitHub

- name: Resolve absolute path of private key # noqa: var-naming[no-role-prefix]
  when:
  - not fluxcd_bootstrap_install_only
  ansible.builtin.command: "realpath {{ private_key_path }}"
  failed_when: pk_realpath.rc != 0
  changed_when: false
  register: pk_realpath

- name: Generate ssh known hosts
  when:
  - fluxcd_bootstrap_git_url is defined
  block:
  - name: Run ssh-keyscan for git host # noqa: var-naming[no-role-prefix]
    ansible.builtin.command: "ssh-keyscan -T 10 {{ fluxcd_bootstrap_git_url | regex_replace('^.*@(.*):.*$', '\\1') if fluxcd_bootstrap_git_url is regex('^.*@.*') else fluxcd_bootstrap_git_url | urlsplit('hostname') }}"
    register: keyscan
    failed_when: keyscan.rc != 0
    changed_when: false

  - name: Add scanned keys to known_hosts
    ansible.builtin.lineinfile:
      name: ~/.ssh/known_hosts
      create: true
      mode: '0600'
      line: "{{ scan_result }}"
    with_items: '{{ keyscan.stdout_lines }}'
    loop_control:
      loop_var: scan_result
# end block Generate ssh known hosts

- name: Run flux bootstrap # noqa: var-naming[no-role-prefix]
  when:
  - not fluxcd_bootstrap_install_only
  ansible.builtin.command: "flux bootstrap git --silent --private-key-file={{ pk_realpath.stdout }} {{ bootstrap_param_git_url }} {{ bootstrap_param_git_branch }} {{ bootstrap_param_key_passphrase }} {{ bootstrap_param_git_path }} {{ bootstrap_param_components }} {{ bootstrap_param_components_extra }} {{ bootstrap_param_cluster_domain }} {{ bootstrap_param_network_policy }} {{ bootstrap_param_namespace }} {{ bootstrap_param_version }} {{ bootstrap_param_force }}" # yamllint disable-line rule:line-length
  failed_when: flux_cli_bootstrap.rc != 0
  changed_when: false
  register: flux_cli_bootstrap

- name: Run flux install # noqa: var-naming[no-role-prefix]
  when:
  - fluxcd_bootstrap_install_only
  ansible.builtin.command: "flux install {{ bootstrap_param_components }} {{ bootstrap_param_components_extra }} {{ bootstrap_param_cluster_domain }} {{ bootstrap_param_network_policy }} {{ bootstrap_param_namespace }} {{ bootstrap_param_version }}"
  failed_when: flux_cli_install.rc != 0
  changed_when: false
  register: flux_cli_install

# TODO: Add repo bootstrap locally, without doing any git commits?
