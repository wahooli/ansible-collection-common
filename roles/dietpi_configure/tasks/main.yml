---
- name: Read /etc/hostname
  when: ansible_hostname is undefined
  ansible.builtin.slurp:
    src: /etc/hostname
  register: hostname_file

- name: Set current hostname fact
  ansible.builtin.set_fact:
    current_hostname: "{{ ansible_hostname | default(hostname_file.content | default('') | b64decode | trim) }}"

- name: "Disable root password ssh login"
  become: true
  ansible.builtin.lineinfile:
    line: "PermitRootLogin prohibit-password"
    dest: "{{ sshd_config }}"
    regexp: '^([#]+)?(\s+)?PermitRootLogin \S+'
    state: "present"
  notify:
  - Restart sshd

- name: Change hostname with dbus
  ansible.builtin.include_tasks: dbus-hostname.yml
  when:
  - dietpi_configure_use_dbus

- name: "Set hostname to {{ inventory_hostname }}"
  become: true
  when:
  - ansible_connection not in [ "container", "docker", "community.docker.docker" ]
  - not dietpi_configure_use_dbus
  ansible.builtin.copy:
    dest: "/etc/hostname"
    owner: root
    group: root
    mode: "0644"
    content: "{{ inventory_hostname }}"
  notify:
  - Emit reboot required
  - Reboot

- name: Replace old hostname with new hostname
  become: true
  when:
  - ansible_connection not in [ "container", "docker", "community.docker.docker" ]
  ansible.builtin.replace:
    path: /etc/hosts
    regexp: '(\s+){{ current_hostname }}(\s+.*)?$'
    replace: '\1{{ inventory_hostname }}\2'

- name: Remove dietpi user
  ansible.builtin.user:
    name: dietpi
    state: absent

- name: Remove dietpi group
  ansible.builtin.group:
    name: dietpi
    state: absent

- name: Create users
  ansible.builtin.include_tasks: create-user.yml
  when:
  - dietpi_configure_users is defined
  loop: "{{ dietpi_configure_users }}"

- name: Run dietpi-update
  become: true
  when:
  - ansible_connection not in [ "container", "docker", "community.docker.docker" ]
  ansible.builtin.command: "/boot/dietpi/dietpi-update 1"
  register: dietpi_update_command
  changed_when: dietpi_update_command.rc != 0
