FROM {{ item.image }}

ENV container=docker \
    ANSIBLE_USER=molecule \
    DEPLOY_GROUP=deployer \
    SUDO_GROUP={{'sudo' if 'debian' in item.image else 'wheel' }}

RUN rm -rf /usr/lib/initcpio/* \
    && pacman --noconfirm -Sy \
    sudo \
    iproute2 \
    python \
    python-packaging \
    which \
    && pacman -Syu --noconfirm \
    && rm -rf /var/lib/pacman/sync/* \
    && rm -Rf /usr/share/doc && rm -Rf /usr/share/man \
    && set -xe \
    && groupadd -r ${ANSIBLE_USER} \
    && groupadd -r ${DEPLOY_GROUP} \
    && useradd -m -g ${ANSIBLE_USER} ${ANSIBLE_USER} \
    && usermod -aG ${SUDO_GROUP} ${ANSIBLE_USER} \
    && usermod -aG ${DEPLOY_GROUP} ${ANSIBLE_USER} \
    && sed -i "s/^#\s*\(%${SUDO_GROUP}.*\\s\+NOPASSWD:\s\+ALL\)/\1/" /etc/sudoers \
    && pacman-key --init

STOPSIGNAL SIGRTMIN+3
VOLUME [ "/tmp", "/run", "/run/lock", "/sys/fs/cgroup"  ]
WORKDIR /

RUN mkdir -p /etc/modules-load.d/ ; \
    (for i in /lib/systemd/system/sysinit.target.wants/*; do test $i != "/lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup.service" && rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*;\
    rm -f /etc/systemd/system/*.wants/*;\
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*; \
    rm -f /usr/lib/systemd/system/systemd-machine-id-commit.service; \
    rm -f /usr/lib/systemd/system/systemd-resolved.service; \
    chmod a+rwx /tmp/; \
    sed -ri 's/MemoryDenyWriteExecute/#MemoryDenyWriteExecute/g' /usr/lib/systemd/system/systemd-journald.service; \
    sed -ri 's/SystemCallFilter/#SystemCallFilter/g' /usr/lib/systemd/system/systemd-journald.service; \
    touch /dev/kmsg ;

RUN touch /docker-entrypoint.sh && chmod a+x /docker-entrypoint.sh && \
echo -e '#!/bin/bash\n\
mkdir -p /sys/fs/cgroup\n\
mount -t cgroup2 none /sys/fs/cgroup\n\
mount --make-shared /sys/fs/cgroup\n\
touch /dev/kmsg\n\
exec "$@"'\
>> /docker-entrypoint.sh

ENTRYPOINT [ "/docker-entrypoint.sh", "/lib/systemd/systemd", "log-level=info", "unit=sysinit.target" ]
