---

- name: Unmount and remove lvols
  ansible.builtin.include_tasks: unmount-and-remove-lvol.yaml
  loop: "{{ topolvm_prepare_lvols }}"
  when:
  - topolvm_prepare_lvols is defined
  - ansible_connection not in [ "container", "docker", "community.docker.docker" ]

- name: "Remove VG {{ topolvm_prepare_vg_name }}"
  become: true
  community.general.lvg:
    vg: "{{ topolvm_prepare_vg_name }}"
    state: "absent"
    pvs: "{{ topolvm_prepare_disks }}"

- name: Filter existing pvs from topolvm_prepare_disks fact as pv_disks fact
  when: topolvm_prepare_disks | length > 0
  become: true
  block:
  - name: Get existing pvs
    ansible.builtin.shell:
      executable: /bin/bash
      cmd: |
        set -o pipefail
        pvdisplay -C -o pv_name --no-headings | awk '{$1=$1};1'
    register: pvdisplay_output
    changed_when: pvdisplay_output.rc != 0
  - name: Filter with stdout
    ansible.builtin.set_fact:
      pv_disks: "{{ topolvm_prepare_disks | intersect(pvdisplay_output.stdout_lines) }}"

- name: Remove pvs
  become: true
  ansible.builtin.command: "pvremove {{ pv_disks | join(' ') }}"
  register: remove_pvs_command
  changed_when: remove_pvs_command.rc != 0
  when: pv_disks|length > 0

- name: "Remove /etc/lvm/lvm.conf"
  become: true
  ansible.builtin.file:
    path: "/etc/lvm/lvm.conf"
    state: "absent"

- name: Uninstall lvm2 package
  become: true
  ansible.builtin.package:
    name: "lvm2"
    state: absent

- name: Enable systemd timer for fstrim
  become: true
  ansible.builtin.systemd_service:
    name: fstrim.timer
    state: stopped
    enabled: false
  when: topolvm_prepare_enable_fstrim | bool
