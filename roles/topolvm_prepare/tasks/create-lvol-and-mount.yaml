---
- name: Create thin pool if not present
  become: true
  community.general.lvol:
    vg: "{{ topolvm_prepare_vg_name }}"
    thinpool: "{{ item.name }}"
    size: "{{ item.size }}"
    force: false
    opts: "{{ item.opts | default('') }}"
  when:
  - not (item.remove | default (false))
  - item.name is undefined
  - item.thinpool not in lvdisplay_output.stdout_lines

- name: Create lvol if not present
  become: true
  community.general.lvol:
    vg: "{{ topolvm_prepare_vg_name }}"
    lv: "{{ item.name }}"
    size: "{{ item.size }}"
    force: false
    opts: "{{ item.opts | default('') }}"
  when:
  - not (item.remove | default (false))
  - item.name is defined
  - item.name not in lvdisplay_output.stdout_lines

- name: Create mount path
  become: true
  ansible.builtin.file:
    path: "{{ item.mountpath }}"
    state: directory
    mode: '0755'
  register: mount_path
  when:
  - not (item.remove | default (false))
  - item.mountpath is defined

- name: Create filesystem
  become: true
  community.general.filesystem:
    dev: "/dev/{{ topolvm_prepare_vg_name }}/{{ item.name }}"
    fstype: "{{ item.fstype }}"
    resizefs: true
  when:
  - not (item.remove | default (false))
  - mount_path is defined
  - mount_path is succeeded
  - item.fstype is defined
  - item.name is defined

- name: Unmount and resize lvol
  when:
  - not (item.remove | default(false))
  - item.allow_resize | default(false)
  - item.name is defined
  - item.name in lvdisplay_output.stdout_lines
  block:
  - name: Unmount lvol without modifying fstab
    become: true
    ansible.posix.mount:
      path: "{{ item.mountpath }}"
      src: "/dev/{{ topolvm_prepare_vg_name }}/{{ item.name }}"
      state: unmounted
  - name: Resize lvol
    become: true
    community.general.lvol:
      vg: "{{ topolvm_prepare_vg_name }}"
      lv: "{{ item.name }}"
      size: "{{ item.size }}"
      force: true
      resizefs: true
      shrink: true
      opts: "{{ item.opts | default('') }}"

- name: Mount lvol
  become: true
  ansible.posix.mount:
    path: "{{ item.mountpath }}"
    src: "/dev/{{ topolvm_prepare_vg_name }}/{{ item.name }}"
    fstype: "{{ item.fstype }}"
    state: mounted
  when:
  - not (item.remove | default(false))
  - mount_path is defined
  - mount_path is succeeded
  - item.fstype is defined
  - item.name is defined

- name: Remove lvol
  when:
  - item.remove | default(false)
  - item.name is defined
  - item.name in lvdisplay_output.stdout_lines
  block:
  - name: Unmount lvol and remove from fstab
    ansible.posix.mount:
      src: "/dev/{{ topolvm_prepare_vg_name }}/{{ item.name }}"
      path: "{{ item.mountpath }}"
      state: absent
    when: item.mountpath is defined
  - name: Remove mount path
    ansible.builtin.file:
      path: "{{ item.mountpath }}"
      state: absent
    when: item.mountpath is defined
  - name: Delete lvol
    community.general.lvol:
      vg: "{{ topolvm_prepare_vg_name }}"
      lv: "{{ item.name }}"
      state: "absent"
      force: true
