---
- name: "Update apt repository cache"
  become: true
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    pkg:
    - lvm2
    - bash
    - udev
  when: ansible_facts['os_family'] == "Debian"

- name: Copy lvm configuration
  become: true
  ansible.builtin.template:
    src: "lvm.conf.j2"
    dest: "/etc/lvm/lvm.conf"
    owner: root
    group: root
    mode: "0644"

- name: Set topolvm_prepare_disks fact if undefined
  when: topolvm_prepare_disks is undefined
  block:
  - name: Print disk result
    ansible.builtin.set_fact:
      topolvm_prepare_disks: "{{ lvm_disks | default([]) + ['/dev/' + item.key] }}"
    when:
    - item.value.partitions|length < 1
    - item.value.holders|length < 1
    - item.value.links.ids|length > 0
    - item.key | regex_search (topolvm_prepare_regex_search)
    with_dict: "{{ ansible_devices }}"

- name: Filter existing pvs from topolvm_prepare_disks fact as pv_disks fact
  when: topolvm_prepare_disks | length > 0
  become: true
  block:
  - name: Get existing pvs
    ansible.builtin.shell:
      executable: /bin/bash
      cmd: |
        set -o pipefail
        pvdisplay -C -o pv_name --no-headings | awk '{$1=$1};1'
    register: pvdisplay_output
    changed_when: pvdisplay_output.rc != 0
  - name: Filter with stdout
    ansible.builtin.set_fact:
      pv_disks: "{{ topolvm_prepare_disks | difference(pvdisplay_output.stdout_lines) }}"

- name: Create pvs
  become: true
  ansible.builtin.command: "pvcreate {{ pv_disks | join(' ') }}"
  register: create_pvs_command
  changed_when: create_pvs_command.rc != 0
  when: pv_disks|length > 0

- name: "Create vg {{ topolvm_prepare_vg_name }}"
  become: true
  when: topolvm_prepare_vg_name is defined
  block:
  - name: List existing vgs
    ansible.builtin.shell:
      executable: /bin/bash
      cmd: |
        set -o pipefail
        vgdisplay -C -o name --no-headings | awk '{$1=$1};1'
    register: vgdisplay_output
    changed_when: vgdisplay_output.rc != 0
  - name: "For topolvm_prepare_disks create vg {{ topolvm_prepare_vg_name }}"
    community.general.lvg:
      vg: "{{ topolvm_prepare_vg_name }}"
      pvs: "{{ topolvm_prepare_disks }}"
    when: topolvm_prepare_vg_name not in vgdisplay_output.stdout_lines

- name: List existing lvs
  become: true
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail
      lvdisplay -C -o lv_name --no-headings | awk '{$1=$1};1'
  register: lvdisplay_output
  changed_when: lvdisplay_output.rc != 0
  when: topolvm_prepare_lvols is defined

# i didn't figure out how to create lvols in docker. it always fails
- name: Create lvols and mount them
  ansible.builtin.include_tasks: create-lvol-and-mount.yaml
  loop: "{{ topolvm_prepare_lvols }}"
  when:
  - topolvm_prepare_lvols is defined
  - ansible_connection not in [ "container", "docker", "community.docker.docker" ]

- name: Enable systemd timer for fstrim
  become: true
  ansible.builtin.systemd_service:
    name: fstrim.timer
    state: started
    enabled: true
  when: topolvm_prepare_enable_fstrim | bool
