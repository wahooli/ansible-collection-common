---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  gather_facts: true
  tasks:
  - name: Check cilium cli is installed
    ansible.builtin.command: "cilium version --client"
    register: cilium_cli_version_output
    failed_when: false
    changed_when: false

  - name: Get current user name
    ansible.builtin.command: whoami
    register: current_user_name
    changed_when: current_user_name.rc != 0
    when: ansible_user is undefined or ansible_user == ""

  - name: Check cilium helm release status
    vars:
      venv_user: "{{ ansible_user | default(current_user_name.stdout) | default(omit) }}"
      virtualenv_command: "{{ 'python -m venv' if ansible_facts['os_family'] == 'Archlinux' else 'virtualenv' }}"
    block:
    - name: Get user home path
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |-
          set -o pipefail
          grep -E {{ venv_user | default('root') }}: /etc/passwd | awk -F: '{ print $6 }'
      failed_when: user_home_path.rc != 0
      changed_when: false
      register: user_home_path

    - name: Ensure the virtual environment exists
      ansible.builtin.pip:
        name: packaging
        virtualenv: "{{ user_home_path.stdout }}/.ansible-venv"
        virtualenv_command: "{{ virtualenv_command }}"

    - name: Run commands in venv
      vars:
        ansible_python_interpreter: "{{ venv_python }}"
        venv_dir: "{{ user_home_path.stdout }}/.ansible-venv"
        venv_python: "{{ venv_dir }}/bin/python"
      block:
      - name: Get cilium helmrelease information
        kubernetes.core.helm_info:
          release_name: cilium
          release_namespace: kube-system
        register: cilium_helmrelease

    - name: Run assertions
      ansible.builtin.assert:
        that:
        - cilium_helmrelease.status.status is not defined or cilium_helmrelease.status.status != 'deployed'
        - cilium_cli_version_output.rc != 0
