---
# tasks file for update_os
- name: Gather package facts
  ansible.builtin.include_tasks: "package-facts-{{ ansible_os_family | lower }}.yaml"
  when: ansible_facts.packages is not defined

- name: Update os
  ansible.builtin.include_tasks: "update-os-{{ ansible_os_family | lower }}.yaml"

- name: Gather the package facts
  become: true
  ansible.builtin.package_facts:
    manager: auto

- name: Set post-upgrade kernel version fact on Debian # noqa: var-naming[no-role-prefix]
  ansible.builtin.set_fact:
    post_upgrade_kernel: "{{ ansible_facts.packages | dict2items | selectattr('key', 'match', '^linux-image-[A-Za-z0-9]+$') | map(attribute='value') | first | map(attribute='version') }}"
  when:
  - ansible_facts['distribution'] == "Debian"
  - ansible_connection not in [ "container", "docker", "community.docker.docker" ]

- name: Create /var/run/reboot-required file if kernel was updated
  become: true
  ansible.builtin.file:
    path: /var/run/reboot-required
    state: touch
    mode: "0644"
    modification_time: preserve
    access_time: preserve
  when:
  - pre_upgrade_kernel is defined
  - post_upgrade_kernel is defined
  - post_upgrade_kernel != pre_upgrade_kernel

- name: Check if reboot-required exists # noqa: var-naming[no-role-prefix]
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required
