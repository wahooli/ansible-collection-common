---
- name: Apply custom grub cmdline
  become: true
  when: archlinux_install_grub_cmdline is defined
  ansible.builtin.lineinfile:
    path: "/mnt/etc/default/grub"
    state: "present"
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=*.'
    mode: "0644"
    line: "GRUB_CMDLINE_LINUX_DEFAULT=\"{{ archlinux_install_grub_cmdline }}\""

- name: Install GRUB # noqa: var-naming[no-role-prefix]
  ansible.builtin.command:
    cmd: arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB-ARCH
  failed_when: configure_grub_install.rc != 0
  changed_when: false
  register: configure_grub_install
  when: ansible_connection not in ["container", "docker", "community.docker.docker"]

- name: Create GRUB config # noqa: var-naming[no-role-prefix]
  ansible.builtin.command:
    cmd: arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg
  failed_when: configure_grub_config.rc != 0
  changed_when: false
  register: configure_grub_config
  when: ansible_connection not in ["container", "docker", "community.docker.docker"]
