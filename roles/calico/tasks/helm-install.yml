---
- name: Ensure the tigera-operator Namespace exists. # noqa: var-naming[no-role-prefix]
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: tigera-operator
        labels:
          topolvm.io/webhook: ignore
    state: present
  register: tigera_operator_ns

- name: Create configmap using server side apply
  when: calico_helm_values.installation.calicoNetwork.linuxDataplane | default("IpTables") == "BPF"
  kubernetes.core.k8s:
    namespace: tigera-operator
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: kubernetes-services-endpoint
      data:
        KUBERNETES_SERVICE_HOST: "{{ calico_k3s_service_host | default(ansible_ssh_host) }}"
        KUBERNETES_SERVICE_PORT: "{{ calico_k3s_service_port | default(6443) }}"
    apply: true
    server_side_apply:
      field_manager: ansible

- name: Get current calico helm version
  when: not tigera_operator_ns.changed
  block:
  - name: Get calico helmrelease information
    kubernetes.core.helm_info:
      release_name: calico
      release_namespace: tigera-operator
      release_state:
      - deployed
    register: calico_helmrelease
  - name: Set current calico version fact
    ansible.builtin.set_fact:
      calico_installed_version: "{{ calico_helmrelease.status.app_version }}"
    when: calico_helmrelease.status.app_version is defined

- name: Add helm repo for calico
  kubernetes.core.helm_repository:
    name: projectcalico
    repo_url: https://docs.tigera.io/calico/charts
    state: present
  register: calico_repo_add

- name: Separately update the repository cache
  kubernetes.core.helm:
    name: dummy
    namespace: kube-system
    state: absent
    update_repo_cache: true
  when: not calico_repo_add.changed

- name: "Helm deploy calico {{ calico_version }}" # noqa: var-naming[no-role-prefix]
  kubernetes.core.helm:
    name: calico
    chart_ref: projectcalico/tigera-operator
    release_namespace: tigera-operator
    chart_version: "{{ calico_version }}"
    values: "{{ calico_helm_values | default({}) }}"
    wait: true
  when:
    calico_version != (calico_installed_version | default ("default_value"))
    or
    calico_helm_upgrade | default(false)
  register: helm_install_calico

- name: Patch tigera-operator ClusterRole
  when: helm_install_calico is changed # noqa: no-handler
  kubernetes.core.k8s_json_patch:
    api_version: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    name: tigera-operator
    patch:
    - op: add
      path: /rules/-
      value:
        apiGroups:
        - operator.tigera.io
        resources:
        - installations
        - apiservers
        verbs:
        - delete

- name: Wait until default FelixConfiguration has manifested # noqa: var-naming[no-role-prefix]
  kubernetes.core.k8s_info:
    api_version: "{{ calico_felix_configuration_apiversion }}"
    kind: FelixConfiguration
    name: default
  register: felixconfig
  until: felixconfig.resources != []
  retries: "{{ calico_install_wait_retries | default(60) }}"
  delay: 1

- name: Patch FelixConfiguration
  kubernetes.core.k8s_json_patch:
    api: "{{ calico_felix_configuration_apiversion }}"
    kind: FelixConfiguration
    name: default
    patch:
    - op: add
      path: /spec/iptablesBackend
      value: "{{ calico_iptables_backend | default('Auto') }}"
    - op: add
      path: /spec/logFilePath
      value: "{{ 'none' if calico_disable_file_logging | default(true) else '/var/log/calico/felix.log' }}"
    - op: add
      path: /spec/bpfExternalServiceMode
      value: "{{ 'DSR' if calico_enable_bpf_dsr | default(false) else 'Tunnel' }}"
    - op: add
      path: /spec/ipv6Support
      value: "{{ calico_enable_ipv6 | default(false) }}"

- name: Wait until calico-system namespace has manifested
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: calico-system
  register: calico_system_ns
  until: calico_system_ns.resources != []
  retries: "{{ calico_install_wait_retries | default(60) }}"
  delay: 1

- name: Patch calico-system namespace
  kubernetes.core.k8s_json_patch:
    api_version: v1
    kind: Namespace
    name: calico-system
    patch:
    - op: add
      path: /metadata/labels/topolvm.io~1webhook
      value: "ignore"

- name: Wait until calico-apiserver namespace has manifested
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: calico-apiserver
  register: calico_apiserver_ns
  until: calico_apiserver_ns.resources != []
  when: calico_helm_values.apiServer.enabled | default(true)
  retries: "{{ calico_install_wait_retries | default(60) }}"
  delay: 2

- name: Patch calico-apiserver namespace
  when: calico_apiserver_ns.resources != []
  kubernetes.core.k8s_json_patch:
    api_version: v1
    kind: Namespace
    name: calico-apiserver
    patch:
    - op: add
      path: /metadata/labels/topolvm.io~1webhook
      value: "ignore"
