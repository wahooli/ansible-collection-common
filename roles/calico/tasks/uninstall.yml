- name: Check if can access cluster with kubectl
  ansible.builtin.command: "kubectl get nodes"
  register: kubectl_command
  failed_when: false
  changed_when: false

- name: Determine calico_kubeconfig fact if not set
  when:
  - calico_kubeconfig | default("") == ""
  ansible.builtin.import_tasks: resolve-kubeconfig.yml

- name: Check if calicoctl exists
  ansible.builtin.command: "which calicoctl"
  register: which_calicoctl_command
  changed_when: false
  failed_when: false

- name: Remove calicoctl
  become: true
  when: which_calicoctl_command.rc == 0
  ansible.builtin.file:
    path: "{{ which_calicoctl_command.stdout | trim }}"
    state: absent

- name: Check if calicoctl exists
  ansible.builtin.command: "which kubectl-calico"
  register: which_kubectl_calico_command
  changed_when: false
  failed_when: false

- name: Remove calicoctl
  become: true
  when: which_kubectl_calico_command.rc == 0
  ansible.builtin.file:
    path: "{{ which_kubectl_calico_command.stdout | trim }}"
    state: absent

- name: Remove k3s-killall.sh.d script
  become: true
  when: calico_uninstall_remove_killall_script | default(false)
  ansible.builtin.file:
    path: "{{ calico_k3s_killalld_dir }}/99-remove-calico-interfaces.sh"
    state: absent

- name: Uninstall calico
  environment:
    K8S_AUTH_KUBECONFIG: "{{ calico_kubeconfig }}"
  when:
  - kubectl_command.rc == 0
  block:
  - name: Uninstall calico helm chart
    ansible.builtin.include_tasks: helm-uninstall.yml

  - name: Ensure the tigera-operator Namespace is removed
    run_once: true
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      name: tigera-operator
      state: absent

  - name: Ensure the FelixConfiguration is removed
    run_once: true
    kubernetes.core.k8s:
      api_version: "{{ felix_configuration_apiversion }}"
      kind: FelixConfiguration
      name: default
      state: absent

  - name: Ensure the calico Installation manifest is removed
    run_once: true
    kubernetes.core.k8s:
      api_version: "operator.tigera.io/v1"
      kind: Installation
      name: default
      state: absent

  - name: Ensure the calico-node ServiceAccount is removed
    run_once: true
    kubernetes.core.k8s:
      api_version: v1
      kind: ServiceAccount
      name: calico-node
      namespace: calico-system
      state: absent

  - name: Ensure the calico-cni-plugin ServiceAccount is removed
    run_once: true
    kubernetes.core.k8s:
      api_version: v1
      kind: ServiceAccount
      name: calico-cni-plugin
      namespace: calico-system
      state: absent

  - name: Ensure the calico-system Namespace is removed
    run_once: true
    kubernetes.core.k8s:
      api_version: v1
      kind: Namespace
      name: calico-system
      state: absent

# end block Uninstall calico
